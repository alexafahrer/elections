---
title: "Ô∏èUS Presidential Elections"
format: 
  dashboard:
    nav-buttons: [github]
logo: images/logo.png
fig-width: 10
fig-asp: 0.3
---

```{r}
#| label: load-packages
#| message: false
#| include: false
library(tidyverse)
library(DT)
library(usmap)

```

```{r}
#| label: load-data
#| message: false
#| include: false

presidents <- read_csv("data/1976-2020-president.csv", show_col_types = FALSE)

```

#  {.sidebar}

This dashboard displays presidential election data from 1976 to 2020:

**MIT Election Data and Science Lab, [MIT Data Lab](https://electionlab.mit.edu/)**

The data were gathered from the [Harvard Dataverse Database](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/42MVDX).

<br>

::: {.callout-note}
## Plot Notes

This plot represents the **popular vote** within each state in the presidential
election from the selected year.
:::


# All

```{r}
#| include: false

gradient_map_data <- presidents |>
  filter(party_simplified %in% c("DEMOCRAT", "REPUBLICAN"),
         state != "DISTRICT OF COLUMBIA", 
         year == 2000) |>
  select(party_simplified, year, state_fips, candidatevotes, totalvotes) |>
  mutate(perc_votes = candidatevotes / totalvotes) |>
  arrange(party_simplified) |>
  group_by(year, state_fips) |>
  reframe(rep_dem_diff = diff(perc_votes)) |>
  select(-year) |>
  rename(fips = state_fips, values = rep_dem_diff) 

red_blue_map_data <- presidents |>
  filter(year == 1976) |>
  group_by(state) |>
  filter(candidatevotes == max(candidatevotes)) |>
  ungroup() |>
  select(state_fips, party_detailed) |>
  rename(fips = state_fips, values = party_detailed)

multiply_by_100 <- function(x) {
  return(paste0(x * 100, " points"))
}

```


## Row {height="20%"}

```{r}
#| content: valuebox
#| title: "Year"

list(
  color = "secondary",
  value = "1976"
)

```

```{r}
#| content: valuebox
#| title: "Snowy days"


```

```{r}
#| content: valuebox
#| title: "Number of days below freezing"


```

## Row {height="40%"}

### Column {width="40%"}

```{r}
#| title: Presidential Gradient

plot_usmap("states", data = gradient_map_data) +
  scale_fill_gradient2(labels = multiply_by_100, low = "blue",
                       high = "red", mid = "white", midpoint = 0) +
  labs(fill = "Point Differential") +
  theme(legend.position = "right") +
  theme(legend.title = element_text(vjust = 1, face = "bold"))

```

### Column {width="40%"}

```{r}
#| title: Presidential Winners

plot_usmap("states", data = red_blue_map_data) +
  scale_fill_manual(values = c("blue", "red")) +
  labs(fill = "Presidential Party") +
  theme(
    legend.position = "right"
  )

```
