---
title: "Ô∏èUS Presidential Elections"
format: 
  dashboard:
    nav-buttons: [github]
server: shiny
---

```{r}
#| label: load-packages-and-data
#| message: false
#| include: false
#| context: setup

library(tidyverse)
library(DT)
library(usmap)
library(shiny)
library(tools)

presidents <- read_csv("data/1976-2020-president.csv", show_col_types = FALSE)

#print(presidents)
```

## {.sidebar}

This dashboard displays the various presidential election data from 1976 to 2020. 
<hr>

Begin by selecting a year to investigate:
```{r}
#| label: user-input

selectInput(
  inputId = "input_year",
  label = strong("Election Year"),
  choices = unique(presidents$year),
  selected = "1976"
)

# https://quarto.org/docs/interactive/
```

<hr>

::: {.callout-note}
## Note

This data represents the **popular vote** in each state, not the electoral college vote. 
:::

# Home

Welcome to our dashboard!

This project attempted to examine presidential voting trends in the United States. With a shared interest in statistics and a curiosity about the upcoming presidential election, we aimed to analyze historical data to uncover insights into state-based voting behaviors. Our project goals focused on two main objectives. Firstly, we wanted to understand the changes of presidential voting behaviors over time, particularly focusing on state-level trends. To achieve this, we created two maps: one using a gradient to display the candidate polarization within a state and another simply coloring the popular vote winner by state. Secondly, we aimed to explore the emergence and evolution of swing states since 1976. To address these questions, we developed a Quarto dashboard, allowing users to select presidential election years from 1976 to 2020 for analysis. The dashboard provides a comprehensive view of each selected year, showcasing the popular vote winner and loser, gradient maps indicating point differential, and our highlighted home states.

---

Page Descriptions

- [Home:](#home) Home page with project abstract, navigation, and information about the data.
- [Elections:](#elections) Interactive dashboard to select a presidential election year from 1970 to 2020 and explore trends through visualizations.
- [Swing States:](#swing-states) Interactive dashboard to investigate swing states and their voting trends in presidential elections from 1976 to 2020.
- [Data:](#data) A table displaying the raw data used in the project.
- [Write Up:](#write-up) Page with the required write-up for the class.
- [About:](#about) Page describing the team members involved in the project.

---

About the Data

The data were originally collected by the [MIT Election Data and Science Lab](https://electionlab.mit.edu/). We accessed the data through the [Harvard Dataverse Database](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/42MVDX).


```{r}
#| label: functions
#| include: false

reformat_name <- function(name) {
  parts <- strsplit(name, ", ")[[1]]
  formatted_name <- paste(trimws(parts[2]), trimws(parts[1]))
  text_lower <- tolower(formatted_name)
  formatted_name <- toTitleCase(text_lower)
  return(formatted_name)
}

lower_case <- function(name) {
  text_lower <- tolower(name)
  formatted_name <- toTitleCase(text_lower)
  return(formatted_name)
}
```

```{r}
#| label: data-sets-for-plots
#| include: false
#| context: server

presidents_winner <- reactive({
  presidents |>
    filter(
      year == input$input_year,
      party_simplified %in% c("DEMOCRAT", "REPUBLICAN")
    ) |>
    group_by(state) |>
    filter(candidatevotes == max(candidatevotes)) |>
    ungroup() |>
    select(year, state, state_fips, candidate, party_simplified, candidatevotes, totalvotes) |>
    group_by(candidate) |>
    summarize(total_votes = sum(candidatevotes)) |>
    mutate(perc = total_votes / sum(total_votes)) |>
    group_by(candidate) |>
    #mutate(candidate = reformat_name(candidate)) |>
    ungroup()
})

gradient_map_data <- reactive({
  presidents |>
    filter(
      party_simplified %in% c("DEMOCRAT", "REPUBLICAN"),
      state != "DISTRICT OF COLUMBIA",
      year == input$input_year
    ) |>
    select(party_simplified, year, state_fips, candidatevotes, totalvotes) |>
    mutate(perc_votes = candidatevotes / totalvotes) |>
    arrange(party_simplified) |>
    group_by(year, state_fips) |>
    reframe(rep_dem_diff = diff(perc_votes)) |>
    select(-year) |>
    rename(fips = state_fips, values = rep_dem_diff)
})

red_blue_map_data <- reactive({
  presidents |>
    filter(year == input$input_year) |>
    group_by(state) |>
    filter(candidatevotes == max(candidatevotes)) |>
    ungroup() |>
    select(state_fips, party_simplified) |>
    rename(fips = state_fips, values = party_simplified)
})

swing_states <- reactive({
  gradient_map_data() |>
    filter(
      abs(values) < 0.03
      ) |>
    mutate(values = TRUE)
})

swing_state_values <- reactive({
  swing_states() |>
    pull(fips)
})

swing_states_red_blue <- reactive({
  presidents |>
    filter(
      party_simplified %in% c("DEMOCRAT", "REPUBLICAN"),
      year == input$input_year, 
      state_fips %in% swing_state_values()
    ) |>
    select(state_fips, party_simplified) |>
    rename(fips = state_fips, values = party_simplified)
})
```

# Elections {scrolling="false"}

## Row {height="10%"}

### Column {width="25%"}

```{r}
#| content: valuebox
#| title: "Popular Vote Winner"
#| color: "green"

textOutput("winner_name")
```

```{r}
#| context: server

output$winner_name <- renderText({
  candidate_name <- presidents_winner() %>%
    filter(perc == max(perc)) %>%
    pull(candidate)
  
  # Split the name into parts
  parts <- str_split(candidate_name, ", ")[[1]]
  
  # Identify and handle the suffix "Jr"
  suffix <- ifelse(grepl("Jr$", parts[2]), "Jr", "")
  first_part <- str_replace(parts[2], "Jr$", "")  # Ensure 'Jr' is removed only if it's at the end
  
  # Trim, rearrange, and reformat the name
  formatted_name <- paste(trimws(first_part), trimws(parts[1]))
  text_lower <- tolower(formatted_name)
  formatted_name <- toTitleCase(text_lower)
  
  # Append the suffix if it exists
  if (nchar(suffix) > 0) {
    formatted_name <- paste(formatted_name, suffix)
  }
  
  formatted_name
})
```

### Column {width="25%"}

```{r}
#| content: valuebox
#| title: "Losing Candidate"

textOutput("loser_name")
```

```{r}
#| context: server

output$loser_name <- renderText({
  loser_name <- presidents_winner() |>
    filter(perc == min(perc)) |>
    pull(candidate)
  
  parts <- str_split(loser_name, ", ")[[1]]
  formatted_name <- paste(trimws(parts[2]), trimws(parts[1]))
  text_lower <- tolower(formatted_name)
  formatted_name <- toTitleCase(text_lower)
  formatted_name
})
```

### Column {width="25%"}

```{r}
#| content: valuebox
#| title: "Year"

textOutput("selected_year")
```

```{r}
#| context: server

output$selected_year <- renderText({
  input$input_year
})
```

### Column {width="25%"}

```{r}
#| content: valuebox
#| title: "Winner Vote Percentage"

textOutput("winning_percentage")
```

```{r}
#| context: server

output$winning_percentage <- renderText({
  presidents_winner() |>
    filter(perc == max(perc)) |>
    mutate(perc = scales::percent(perc, accuracy = 0.1)) |>
    pull(perc)
})
```

## Row {height="20%"}

### Column {width="50%", .fill}

```{r}
#| context: server

output$gradient_map <- renderPlot({
  plot_usmap("states", data = gradient_map_data()) +
  scale_fill_gradient2(
    labels = scales::label_number(scale = 100, suffix = " points"),
    low = "#346EF0",
    high = "#EB3323", mid = "white", midpoint = 0
  ) +
  labs(fill = "Point Differential") +
  theme(
    legend.position = "right",
    legend.title = element_text(vjust = 1, size = 14),
    legend.key.size = unit(1.2, "cm"),
    legend.text = element_text(size = 12)
  )
})
```

```{r}
#| title: Presidential Gradient^[The "point differential" is the difference of the vote share each candidate received from the total number of votes cast in the state, including votes cast for third-party candidates.]
#| padding: 0px

plotOutput("gradient_map")
```

### Column {width="50%", .fill}

```{r}
#| context: server

output$red_blue_map <- renderPlot({
  plot_usmap("states", data = red_blue_map_data()) +
  scale_fill_manual(
    values = c("DEMOCRAT" = "#346EF0", "REPUBLICAN" = "#EB3323"),
    labels = c("Democrat", "Republican"), 
    breaks = c("DEMOCRAT", "REPUBLICAN")
  ) +
  labs(fill = "Presidential Party") +
  theme(
    legend.position = "right",
    legend.title = element_text(vjust = 1, size = 14),
    legend.key.size = unit(1.2, "cm"),
    legend.text = element_text(size = 12)
  )
})
```

```{r}
#| title: Presidential Winners
#| padding: 0px

plotOutput("red_blue_map")
```

## Row {height="10%"}

### Column {width="20%"}

```{r}
#| context: server

output$user_map <- renderPlot({
  plot_usmap("states", include = input$selected_state, data = red_blue_map_data(), show.legend = FALSE) +
  scale_fill_manual(values = c("DEMOCRAT" = "#346EF0", "REPUBLICAN" = "#EB3323"))
})
```

```{r}
#| content: card-toolbar
selectInput(
  inputId = "selected_state",
  label = NULL,
  choices = unique(presidents$state_po),
  selected = "NC"
)
```


```{r}
#| title: "Select a State:"

plotOutput("user_map")
```

### Column {width="20%"}

```{r}
#| context: server

output$al_map <- renderPlot({
  plot_usmap("states", include = "AL", data = red_blue_map_data(), show.legend = FALSE) +
  scale_fill_manual(values = c("DEMOCRAT" = "#346EF0", "REPUBLICAN" = "#EB3323"))
})
```

```{r}
#| title: "State of Interest #2: Alabama"

plotOutput("al_map")
```

### Column {width="20%"}

```{r}
#| context: server

output$az_map <- renderPlot({
  plot_usmap("states", include = "AZ", data = red_blue_map_data(), show.legend = FALSE) +
  scale_fill_manual(values = c("DEMOCRAT" = "#346EF0", "REPUBLICAN" = "#EB3323"))
})
```

```{r}
#| title: "State of Interest #3: Arizona"

plotOutput("az_map")
```

### Column {width="20%"}

```{r}
#| context: server

output$mo_map <- renderPlot({
  plot_usmap("states", include = "MO", data = red_blue_map_data(), show.legend = FALSE) +
  scale_fill_manual(values = c("DEMOCRAT" = "#346EF0", "REPUBLICAN" = "#EB3323"))
})
```

```{r}
#| title: "State of Interest #4: Missouri"

plotOutput("mo_map")
```

### Column {width="20%"}

```{r}
#| context: server

output$ny_map <- renderPlot({
  plot_usmap("states", include = "NY", data = red_blue_map_data(), show.legend = FALSE) +
  scale_fill_manual(values = c("DEMOCRAT" = "#346EF0", "REPUBLICAN" = "#EB3323"))
})
```

```{r}
#| title: "State of Interest #5: New York"

plotOutput("ny_map")
```

# Swing States

## Row {height="30%"}

### Column {width="50%"}

```{r}
#| content: valuebox
#| title: "Year"
#| context: server

# list(
#   color = "#D3D3D3",
#   value = renderPrint({input$input_year})
# )
```



### Column {width="50%"}

```{r}
#| content: valuebox
#| title: "Number of Swing States"
#| context: server

# list(
#   color = "#BA68C8",
#   value = swing_states_binary() |> 
#     count(values) |>
#     filter(values == TRUE) |>
#     pull(n)
# )
```

## Row {height="70%"}

### Column {width="50%"}

```{r}
#| context: server

output$swing_states_map <- renderPlot({
  plot_usmap("states", data = swing_states()) +
    scale_fill_manual(values = "#BA68C8", na.value = "#D3D3D3") +
    labs(fill = "Swing State") +
    theme(
      legend.position = "none"
    )
})
```

```{r}
#| title: Swing States (In Purple)^[The swing states are calculated to be states [won by a margin of three points or less](https://usafacts.org/articles/what-are-the-current-swing-states-and-how-have-they-changed-over-time/)]

plotOutput("swing_states_map")
```

### Column {width="50%"}

```{r}
#| context: server

output$swing_states_red_blue_map <- renderPlot({
  plot_usmap("states", data = swing_states_red_blue()) +
    scale_fill_manual(values = c("#EB3323", "#346EF0"), 
                      na.value = "#D3D3D3") +
    labs(fill = "Swing State") +
    theme(
      legend.position = "none"
    )
})
```

```{r}
#| title: Swing State Voting Behaviors

plotOutput("swing_states_red_blue_map")
```

# Data

```{r}
#| label: data-table

presidents_datatable <- presidents |>
  select(year, state, candidate, party_detailed, writein, candidatevotes, totalvotes) |>
  rowwise() |>
  mutate(
    percentage_of_votes = scales::percent(candidatevotes / totalvotes, accuracy = 0.01),
    state = lower_case(state),
    party_detailed = lower_case(party_detailed),
    writein = lower_case(writein)
  ) |>
  rename(
    "Year" = "year", "State" = "state", "Candidate Name" = "candidate",
    "Political Party" = "party_detailed", "Write In?" = "writein",
    "Candidate Votes" = "candidatevotes", "Total State Votes" = "totalvotes",
    "Percentage of Total Vote in State" = "percentage_of_votes"
  )

datatable(presidents_datatable)
```

# Write Up {scrolling="true"}

::: {.card title="Introduction" .flow} 
Our project was conducted by Team Ella, composed of Alexa Fahrer, Ryan Silver, Noah Costa, and Ella Hartman. While statistics is nearly the only academic similarity among the team, our team is interested in examining presidential voting trends in the wake of the upcoming presidential election this November. We are from Arizona, Missouri, New York, and Alabama, respectively, states with varied voting trends and histories. We were enthusiastic to see what insights we could uncover in a data set involving the state-based history of presidential elections. 
:::

::: {.card title="Project Goals & Overview" .flow} 
Our original goals were twofold. For one, we were very interested in seeing how presidential voting behaviors in states within the US have changed over time. To investigate this question, we seek to create two maps: first, a gradient map showing the depth of polarization for individual states, and second, a map that only highlights the popular vote winner by state. Secondly, we were curious to see how swing states have emerged and changed since 1976. For this, we seek to create a map highlighting the swing states in every presidential election year. 

To answer these questions, we chose to make a quarto dashboard. The user can select a presidential election year (from 1976 to 2020) to investigate in the dashboard. On the first tab, after a year is selected, the dashboard shows the popular vote winner and percentage, popular vote loser, the USA gradient map, the USA popular vote winner map, and five well-known swing states colored either red or blue. On the second dashboard tab, we show a map of the US with the swing states highlighted purple, classified by if the popular vote candidate is within 3 percentage points of the next highest candidate. The last tab of the dashboard displays a data table of the raw data used in the dashboard.
:::

::: {.card title="Data" .flow} 
Our data originally came from the MIT Election Data and Science Lab, and we accessed the data through the Harvard Dataverse Database. It consists of `{r} nrow(presidents)` observations and `{r} ncol(presidents)` variables, including `year`, `state`, `state_po`, `state_fips`, `state_cen`, `state_ic`, `office`, `candidate`, `party_detailed`, `writein`, `candidatevotes`, `totalvotes`, `version`, `notes`, and `party_simplified.` 

While creating the plots, we filtered the data set for candidates only running in the Democrat or Republican party. We did this because no third-party candidate has ever won the popular vote in a presidential election. Our two maps have states colored red and blue to indicate whether the Republican or Democrat candidate won the popular vote in that state (based on standardized political party colors). The gradient map was determined by the percentage of voters who voted for the Republican candidate minus the percentage of voters who voted for the Democrat candidate. This number was multiplied by 100 to get the number of ‚Äúpoints‚Äù by which a state skewed Democrat or Republican. The second map shows the outright winner of the popular vote in each state, which was determined by whether the percentage of voters who voted for the Democrat candidate or Republican candidate was bigger. 

On the data tab of our quarto dashboard, we show the data set with all `{r} nrow(presidents)` observations and the following variables: `Year`, `State`, `Candidate Name`, `Political Party`, `Write-In?`, `Candidate Votes`, `Total State Votes`, and `Percentage of Total Vote in State.` We left out other variables that were not relevant and would not be useful for the user in viewing the raw data. `Percentage of Total Vote in State` for every candidate was calculated by taking the number of votes for each candidate and dividing it by the total votes for each state.
:::

::: {.card title="Why a Quarto Dashboard" .flow} 
We decided a quarto dashboard would be the best method to display our findings because we could show the answers to these questions all at once in a fashion that clearly shows why we group certain answers together. Our first tab is an overview: we want to show the gradient and the popular vote maps together as well as a few swing states that are well-known with a link to our swing state dashboard. The second tab on the dashboard shows the swing states. It doesn‚Äôt quite answer how popular vote by state has changed over history, which is responded to on our first tab, but instead answers our second question about how swing states have changed. On this tab, we have the states that swing in a given year highlighted. Our last tab allows the viewer to scroll and see all of the different observations of our data. We chose to use a Quarto dashboard instead of a Shiny app or a Quarto document because the Quarto dashboard has a clean interface and is a better user experience than the clunkiness of a Shiny app. We appreciated the opportunity to use multiple tabs to investigate separate aspects of the data. 
:::

::: {.card title="Takeaways & Findings" .flow} 
We‚Äôll begin first by going over trends of general voting data and second by identifying trends of swing states.

Starting in 1976 and making their way through 2020, voting trends have been relatively volatile in the last ~50 years. Democrats dominated the Southeast, Northern Midwest, and New York area while Republicans dominated mainly the Western USA in 1976. The 1980s were dominated by a massive Republican push virtually all around the country. 1992 and 1996 marked a swing back to the Democratic party, fueled mostly by Republican to Democratic switches in the West, Northeast, and Mississippi River states. The year 2000 swung back towards the Republicans, just barely, as many of these Southern Mississippi River states switched. 2004 shows a switch to more Republican and 2008 and 2012 suddenly flip back to Democrat, as the Northeast, Upper Midwest, and West become Democratic and the South and Western Midwest stay Republican. In 2016, for the first time since the 1980s, the Upper Midwest became Republican-leaning, though in 2020, some of these states and Arizona turned blue. As of 2020, Democrats mainly take the Western and Southwestern USA, Northeast, and Upper Midwest, while the Republicans take mainly Southern and Western Middle America as well as the South.

As of swing states, in 1976, the USA would see more swing states than any time since with 14 total swing states, and the majority of these happened to be Republican. There were few geographic trends of where these states were located. In 1980, virtually every swing state was either in the Southeast or the Northeast. Through the Republican dominance of the 1980s, there were only 2 and then 4 swing states in 1984 and 1988, respectively. In 1992 and 1996, there were more swing states (8 and 9), and these states were geographically located near the Western coast or along the Eastern coast. In 2000, 2004, and 2008, the swing states were different virtually every year with no geographic significance. 2012 marked a year of only three swing states, 2016 had more but virtually every swing state was along the coast, and 2020 was similar to 2016. Throughout the years, there are very few consistent swing states. North Carolina appears to be the most consistent swing state throughout the years, though it was only statistically a swing state, meaning within 3% of the winner, in 5 of the 12 recorded elections. Other classic swing states such as Arizona and Michigan are only ‚Äúswing‚Äù, according to our definition, 2 or 3 times throughout this era.
:::

::: {.card title="Limitations" .flow} 
Our work does have a few limitations and challenges. One is that those unfamiliar with United States geography may not understand which states are which on our graph. However, we felt that labeling the states was the only solution to this problem, and doing so would highly clutter our map. Thus, our map is directed towards those who know American geography. We additionally had to exclude the District of Columbia in our gradient map because it was so Democrat-leaning that it made every other Democratic state look almost white on the map (our gradient relies on comparing the most extreme states to more moderate states for coloring; even heavy-leaning democratic states looked only moderately blue). However, because DC is so geographically small, it would have been hard to see in the first place, and excluding it does not change the look of our graph. Going forward, we plan to use this dashboard as an informational tool to better educate people on trends throughout the years, especially in preparation for this upcoming election. It is important that people understand where current voting trends stand in the context of a historical lens. 
:::

::: {.card title="Conclusion" .flow}
We originally wanted to see how voting patterns by state have changed, and we wanted to see how swing states have changed in presidential elections from 1976 to 2020. As a result of our work and methodologies, we can see these patterns on a by-state basis. 
[finish]
:::

# About

::: {.card}
This project was developed by **Team Ella** in Spring 2024 for [STA/ISS 313: Advanced Data Visualization](https://vizdata.org/) at Duke University. The team is comprised of the following team members.

-   Team member 1: My name is [Ryan Silver](https://github.com/ryan-silver) and I am a sophomore from St. Louis, Missouri majoring in Economics and minoring in Statistical Science. I love playing pickle ball and racquetball in my free time.
-   Team member 2: My name is [Alexa Fahrer](https://github.com/alexafahrer) and I am a sophomore from Phoenix, Arizona double majoring in Public Policy and Statistics with a minor in Education. In my free time, I enjoy watching movies, cheering on the 49ers, and playing pickle ball.
-   Team member 3: My name is [Ella Hartman](https://github.com/ellahartman) and I am a senior from Birmingham, Alabama studying Computer Science and Economics.
-   Team member 4: My name is [Noah Costa](https://github.com/Noah-Costa14) and I am a senior from Long Island, New York studying Computer Science. I enjoy golfing and hanging out with my friends on the BC Plaza in my free time.
:::