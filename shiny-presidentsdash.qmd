---
title: "Ô∏èUS Presidential Elections"
format: 
  dashboard:
    nav-buttons: [github]
server: shiny
---

```{r}
#| label: load-packages
#| message: false
#| include: false

library(tidyverse)
library(DT)
library(usmap)
library(shiny)
library(rmarkdown)

```

```{r}
#| label: load-data
#| message: false
#| include: false

presidents <- read_csv("data/1976-2020-president.csv", show_col_types = FALSE)

```

#  {.sidebar}

This dashboard displays presidential election data from 1976 to 2020. 
<hr>

Begin by selecting a year to investigate:
```{r}
#| label: input

selectInput(inputId = "input_year", 
            label = strong("Election Year"),
            choices = unique(presidents$year),
            selected = 1976)

# https://quarto.org/docs/interactive/

```

<hr>

::: {.callout-note}
## Plot Note

These plots represents the **popular vote** within each state in the presidential
election from the selected year.
:::

<br>

MIT Election Data and Science Lab, [MIT Data Lab](https://electionlab.mit.edu/)

The data were gathered from the [Harvard Dataverse Database](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/42MVDX).


# The Display

```{r}
#| include: false
#| context: server

gradient_map_data <- reactive({presidents |>
  filter(party_simplified %in% c("DEMOCRAT", "REPUBLICAN"),
         state != "DISTRICT OF COLUMBIA", 
         year == 1976) |>
  select(party_simplified, year, state_fips, candidatevotes, totalvotes) |>
  mutate(perc_votes = candidatevotes / totalvotes) |>
  arrange(party_simplified) |>
  group_by(year, state_fips) |>
  reframe(rep_dem_diff = diff(perc_votes)) |>
  select(-year) |>
  rename(fips = state_fips, values = rep_dem_diff) 
})

red_blue_map_data <- reactive({residents |>
  filter(year == 1976) |>
  group_by(state) |>
  filter(candidatevotes == max(candidatevotes)) |>
  ungroup() |>
  select(state_fips, party_detailed) |>
  rename(fips = state_fips, values = party_detailed)
})

multiply_by_100 <- function(x) {
  return(paste0(x * 100, " points"))
}

```


## Row {height="15%"}

```{r}
#| content: valuebox
#| title: "Year"

list(
  color = "secondary",
  value = "1976"
)

```

```{r}
#| content: valuebox
#| title: "Popular Vote Winner"


list(
  color = "green",
  value = "Noah Costa"
)

```

```{r}
#| content: valuebox
#| title: "Losing Candidate"

list(
  color = "red",
  value = "Ryan Silver"
)

```


```{r}
#| content: valuebox
#| title: "Number of states won"

list(
  color = "secondary",
  value = "50"
)

```

## Row {height="40%"}

### Column {width="40%", .fill}

```{r}
#| title: Presidential Gradient
#| context: server

server <- function(input, output, session) 
output$gradient_map <- renderPlot({plot_usmap("states", data = gradient_map_data()) +
  scale_fill_gradient2(labels = multiply_by_100, low = "blue",
                       high = "red", mid = "white", midpoint = 0) +
  labs(fill = "Point Differential") +
  theme(legend.position = "right",
        legend.title = element_text(vjust = 1, face = "bold"))
})

plotOutput("gradient_map")

```

### Column {width="40%", .fill}

```{r}
#| title: Presidential Winners

server <- function(input, output, session) 
output$red_blue_map <- renderPlot({plot_usmap("states", data = red_blue_map_data) +
  scale_fill_manual(values = c("blue", "red")) +
  labs(fill = "Presidential Party") +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"))
})

plotOutput("red_blue_map")

```

```{r}
## Row {height="15%"}

### Column {width="20%"}

# ```{r}
# #| title: "Swing State #1: Iowa"

# plot_usmap("states", include = "IA", data = red_blue_map_data, show.legend = FALSE) +
#   scale_fill_manual(values = c("DEMOCRAT" = "blue", "REPUBLICAN" = "red")) +
#   labs(fill = "Presidential Party") +
#   theme(
#     legend.position = "right"
#   )
#```


### Column {width="20%"}

# ```{r}
# #| title: "Swing State #2: North Carolina"
# 
# plot_usmap("states", include = "NC", data = red_blue_map_data, show.legend = FALSE) +
#   scale_fill_manual(values = c("DEMOCRAT" = "blue", "REPUBLICAN" = "red")) +
#   labs(fill = "Presidential Party") +
#   theme(
#     legend.position = "right"
#   )
# ```


### Column {width="20%"}

# ```{r}
# #| title: "Swing State #3: Arizona"
# 
# plot_usmap("states", include = "AZ", data = red_blue_map_data, show.legend = FALSE) +
#   scale_fill_manual(values = c("DEMOCRAT" = "blue", "REPUBLICAN" = "red")) +
#   labs(fill = "Presidential Party") +
#   theme(
#     legend.position = "right"
#   )
# ```


### Column {width="20%"}

# ```{r}
# #| title: "Swing State #4: Ohio"

# plot_usmap("states", include = "OH", data = red_blue_map_data, show.legend = FALSE) +
#   scale_fill_manual(values = c("blue", "red")) +
#   labs(fill = "Presidential Party") +
#   theme(
#     legend.position = "right"
#   )
# ```
``` 

# Swing States

